{
  "openapi": "3.0.3",
  "info": {
    "title": "Finmar API",
    "version": "3.0.0"
  },
  "externalDocs": {
    "url": "https://finmar.tech/prepare2/docsV3/json"
  },
  "servers": [
    {
      "url": "https://finmar.tech/"
    },
    {
      "url": "https://sandbox.finmar.tech/"
    }
  ],
  "paths": {
    "/prepare2/api/v3/checkout": {
      "post": {
        "tags": [
          "Фиатные платежи"
        ],
        "summary": "Получить страницу оплаты",
        "description": "Получить ссылку на страницу оплаты",
        "operationId": "checkout",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v3_checkout_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        },
        "security": [
          {
            "Basic": []
          }
        ]
      }
    },
    "/collector/api/v3/operation": {
      "get": {
        "summary": "Получить операции",
        "description": "Получить список операций",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "Basic": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "v3_checkout_body": {
        "required": [
          "amount",
          "method",
          "payment_profile",
          "user"
        ],
        "type": "object",
        "properties": {
          "merchant_user_entry_point_url": {
            "type": "string"
          },
          "report_metadata": {
            "maxLength": 255,
            "type": "string",
            "description": "max length = 255"
          },
          "project_id": {
            "type": "string"
          },
          "operation_display_id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/prepare2apiv3checkout_user"
          },
          "amount": {
            "$ref": "#/components/schemas/prepare2apiv3checkout_amount"
          },
          "url_callback": {
            "type": "string"
          },
          "payment_profile": {
            "type": "string"
          },
          "locale": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "metadata": {
            "type": "string"
          },
          "amount_alternatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/prepare2apiv3checkout_amount"
            }
          },
          "method": {
            "type": "string",
            "enum": [
              "blik",
              "crypto_protect",
              "cashbox_v2",
              "wallet_invoice",
              "card",
              "volt"
            ]
          }
        },
        "additionalProperties": true,
        "example": {
          "user": {
            "user_id": "123"
          },
          "amount": {
            "amount": "10.00",
            "currency": "USD"
          },
          "payment_profile": "example",
          "project_id": "test_project",
          "method": "cashbox_v2"
        }
      },
      "inline_response_200_result": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "additionalProperties": true
      },
      "prepare2apiv3checkout_user_kyc": {
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "description": "результат проверки - SUCCESS или FAIL",
            "enum": [
              "SUCCESS",
              "FAIL"
            ]
          },
          "verification_kind": {
            "type": "string",
            "description": "тип проверки",
            "default": "NONE",
            "enum": [
              "NONE",
              "ID_DOCUMENT",
              "SELFIE"
            ]
          },
          "id_document_kind": {
            "type": "string",
            "description": "информация об ID-документе (если verification_kind содержит ID_DOCUMENT)",
            "enum": [
              "ID_CARD",
              "PASSPORT",
              "DRIVING_LICENSE",
              "RESIDENCE_PERMIT"
            ]
          },
          "id_document_country": {
            "type": "string"
          },
          "sumsub_share_token": {
            "type": "string"
          },
          "sumsub_client_id": {
            "type": "string",
            "description": "информация о пользователе на стороне KYC провайдера"
          },
          "sumsub_applicant_id": {
            "type": "string"
          }
        },
        "description": "информация о прохождении KYC"
      },
      "prepare2apiv3checkout_user_billing_address": {
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zip_code": {
            "type": "string"
          },
          "address_line_1": {
            "type": "string"
          }
        },
        "description": "адрес плательщика, может передаваться в платежную систему"
      },
      "prepare2apiv3checkout_user": {
        "required": [
          "user_id"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "user_display_id": {
            "type": "string"
          },
          "login": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "description": "контактные данные"
          },
          "email_verified": {
            "type": "boolean"
          },
          "email_verified_at": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "phone_verified": {
            "type": "boolean"
          },
          "phone_verified_at": {
            "type": "string"
          },
          "preferred_locale": {
            "type": "string"
          },
          "preferred_timezone": {
            "type": "string"
          },
          "profile_country": {
            "type": "string",
            "description": "страна пользователя в профиле на стороне партнера"
          },
          "current_ip_address": {
            "type": "string",
            "description": "текущий IP адрес пользователя"
          },
          "billing_address": {
            "$ref": "#/components/schemas/prepare2apiv3checkout_user_billing_address"
          },
          "statistics": {
            "$ref": "#/components/schemas/prepare2apiv3checkout_user_statistics"
          },
          "kyc": {
            "$ref": "#/components/schemas/prepare2apiv3checkout_user_kyc"
          },
          "telegram_id": {
            "type": "string"
          }
        }
      },
      "inline_response_200_1": {
        "required": [
          "success",
          "trace_id"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "trace_id": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "error": {
            "$ref": "#/components/schemas/inline_response_200_1_error"
          }
        }
      },
      "prepare2apiv3checkout_user_statistics": {
        "type": "object",
        "properties": {
          "registered_at": {
            "type": "string",
            "description": "информация о регистрации пользователя"
          },
          "registration_ip_address": {
            "type": "string"
          },
          "registration_traffic_source": {
            "type": "string"
          },
          "most_recent_retention_at": {
            "type": "string",
            "description": "информация о последнем возврате пользователя"
          },
          "most_recent_retention_ip_address": {
            "type": "string"
          },
          "most_recent_retention_traffic_source": {
            "type": "string"
          },
          "total_deposit_count": {
            "type": "number",
            "description": "общее количество успешных депозитов и выплат"
          },
          "total_withdrawal_count": {
            "type": "number"
          },
          "most_recent_deposit_at": {
            "type": "string",
            "description": "информация о последней активности"
          },
          "most_recent_withdrawal_at": {
            "type": "string"
          },
          "most_recent_ip_address": {
            "type": "string"
          },
          "card_deposit_count": {
            "type": "number",
            "description": "количество успешных депозитов по текущей карте"
          }
        },
        "description": "агрегированная информация о поведении пользователя на стороне партнера"
      },
      "inline_response_200": {
        "required": [
          "success",
          "trace_id"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "trace_id": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/inline_response_200_result"
          },
          "error": {
            "$ref": "#/components/schemas/inline_response_200_1_error"
          }
        }
      },
      "inline_response_200_1_error": {
        "required": [
          "code",
          "details"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "enum": [
              "PARSE_ERROR",
              "BAD_REQUEST",
              "INTERNAL_SERVER_ERROR",
              "NOT_IMPLEMENTED",
              "UNAUTHORIZED",
              "FORBIDDEN",
              "NOT_FOUND",
              "METHOD_NOT_SUPPORTED",
              "TIMEOUT",
              "CONFLICT",
              "PRECONDITION_FAILED",
              "PAYLOAD_TOO_LARGE",
              "UNPROCESSABLE_CONTENT",
              "TOO_MANY_REQUESTS",
              "CLIENT_CLOSED_REQUEST"
            ]
          },
          "details": {
            "type": "string"
          }
        }
      },
      "prepare2apiv3checkout_amount": {
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "pattern": "^[0-9]*[.]?[0-9]*$",
            "type": "string",
            "example": "10.00"
          },
          "currency": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Basic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}