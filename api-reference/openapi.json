{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://sandbox.finmar.tech",
      "url": "https://finmar.tech"
      
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/checkout": {
      "post": {
        "operationId": "mutation.entry.getUrl",
        "summary": "checkout",
        "description": "\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0441\u044b\u043b\u043a\u0443 \u043d\u0430 \u043f\u043b\u0430\u0442\u0451\u0436\u043d\u0443\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443",
        "security": [
          {
            "Basic": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "merchant_user_entry_point_url": {
                    "type": "string"
                  },
                  "report_metadata": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "max length = 255"
                  },
                  "project_id": {
                    "type": "string"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "type": "string"
                      },
                      "user_display_id": {
                        "type": "string"
                      },
                      "login": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "description": "\u043a\u043e\u043d\u0442\u0430\u043a\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435"
                      },
                      "email_verified": {
                        "type": "boolean"
                      },
                      "email_verified_at": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "phone_verified": {
                        "type": "boolean"
                      },
                      "phone_verified_at": {
                        "type": "string"
                      },
                      "preferred_locale": {
                        "type": "string"
                      },
                      "preferred_timezone": {
                        "type": "string"
                      },
                      "profile_country": {
                        "type": "string",
                        "description": "\u0441\u0442\u0440\u0430\u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u043f\u0440\u043e\u0444\u0438\u043b\u0435 \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u043f\u0430\u0440\u0442\u043d\u0435\u0440\u0430"
                      },
                      "current_ip_address": {
                        "type": "string",
                        "description": "\u0442\u0435\u043a\u0443\u0449\u0438\u0439 IP \u0430\u0434\u0440\u0435\u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
                      },
                      "billing_address": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "zip_code": {
                            "type": "string"
                          },
                          "address_line_1": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "country"
                        ],
                        "description": "\u0430\u0434\u0440\u0435\u0441 \u043f\u043b\u0430\u0442\u0435\u043b\u044c\u0449\u0438\u043a\u0430, \u043c\u043e\u0436\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u043f\u043b\u0430\u0442\u0435\u0436\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443"
                      },
                      "statistics": {
                        "type": "object",
                        "properties": {
                          "registered_at": {
                            "type": "string",
                            "description": "\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
                          },
                          "registration_ip_address": {
                            "type": "string"
                          },
                          "registration_traffic_source": {
                            "type": "string"
                          },
                          "most_recent_retention_at": {
                            "type": "string",
                            "description": "\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f"
                          },
                          "most_recent_retention_ip_address": {
                            "type": "string"
                          },
                          "most_recent_retention_traffic_source": {
                            "type": "string"
                          },
                          "total_deposit_count": {
                            "type": "number",
                            "description": "\u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u044b\u0445 \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0432 \u0438 \u0432\u044b\u043f\u043b\u0430\u0442"
                          },
                          "total_withdrawal_count": {
                            "type": "number"
                          },
                          "most_recent_deposit_at": {
                            "type": "string",
                            "description": "\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438"
                          },
                          "most_recent_withdrawal_at": {
                            "type": "string"
                          },
                          "most_recent_ip_address": {
                            "type": "string"
                          },
                          "card_deposit_count": {
                            "type": "number",
                            "description": "\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u044b\u0445 \u0434\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0432 \u043f\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043a\u0430\u0440\u0442\u0435"
                          }
                        },
                        "description": "\u0430\u0433\u0440\u0435\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u043f\u0430\u0440\u0442\u043d\u0435\u0440\u0430"
                      },
                      "kyc": {
                        "type": "object",
                        "properties": {
                          "result": {
                            "type": "string",
                            "enum": [
                              "SUCCESS",
                              "FAIL"
                            ],
                            "description": "\u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 - SUCCESS \u0438\u043b\u0438 FAIL"
                          },
                          "verification_kind": {
                            "default": "NONE",
                            "type": "string",
                            "enum": [
                              "NONE",
                              "ID_DOCUMENT",
                              "SELFIE"
                            ],
                            "description": "\u0442\u0438\u043f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438"
                          },
                          "id_document_kind": {
                            "type": "string",
                            "enum": [
                              "ID_CARD",
                              "PASSPORT",
                              "DRIVING_LICENSE",
                              "RESIDENCE_PERMIT"
                            ],
                            "description": "\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e\u0431 ID-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435 (\u0435\u0441\u043b\u0438 verification_kind \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 ID_DOCUMENT)"
                          },
                          "id_document_country": {
                            "type": "string"
                          },
                          "sumsub_share_token": {
                            "type": "string"
                          },
                          "sumsub_client_id": {
                            "type": "string",
                            "description": "\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435 \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 KYC \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430"
                          },
                          "sumsub_applicant_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "result"
                        ],
                        "description": "\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u0440\u043e\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0438 KYC"
                      },
                      "telegram_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "user_id"
                    ]
                  },
                  "amount": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string",
                        "pattern": "^[0-9]*[.]?[0-9]*$",
                        "example": "10.00"
                      },
                      "currency": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "amount",
                      "currency"
                    ]
                  },
                  "url_redirect_success": {
                    "type": "string"
                  },
                  "url_redirect_fail": {
                    "type": "string"
                  },
                  "url_callback": {
                    "type": "string"
                  },
                  "payment_profile": {
                    "type": "string"
                  },
                  "locale": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "string"
                  },
                  "amount_alternatives": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "string",
                          "pattern": "^[0-9]*[.]?[0-9]*$",
                          "example": "10.00"
                        },
                        "currency": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "amount",
                        "currency"
                      ]
                    }
                  },
                  "method": {
                    "type": "string",
                    "enum": [
                      "apm",
                      "crypto_protect",
                      "cashbox",
                      "wallet_invoice",
                      "card",
                      "volt"
                    ]
                  }
                },
                "required": [
                  "user",
                  "amount",
                  "payment_profile",
                  "method"
                ],
                "additionalProperties": true,
                "example": {
                  "user": {
                    "user_id": "123"
                  },
                  "amount": {
                    "amount": "10.00",
                    "currency": "USD"
                  },
                  "payment_profile": "example",
                  "project_id": "test_project",
                  "method": "cashbox"
                }
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "trace_id": {
                      "type": "string"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "launch_type": {
                          "type": "string",
                          "enum": [
                            "iframe",
                            "new_window"
                          ]
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "additionalProperties": true
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "enum": [
                            "PARSE_ERROR",
                            "BAD_REQUEST",
                            "INTERNAL_SERVER_ERROR",
                            "NOT_IMPLEMENTED",
                            "UNAUTHORIZED",
                            "FORBIDDEN",
                            "NOT_FOUND",
                            "METHOD_NOT_SUPPORTED",
                            "TIMEOUT",
                            "CONFLICT",
                            "PRECONDITION_FAILED",
                            "PAYLOAD_TOO_LARGE",
                            "UNPROCESSABLE_CONTENT",
                            "TOO_MANY_REQUESTS",
                            "CLIENT_CLOSED_REQUEST"
                          ]
                        },
                        "details": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "code",
                        "details"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "trace_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/collector/operation": {
      "get": {
        "description": "GET a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "reference_id",
            "in": "path",
            "description": "Идентификатор операции присвоенный системой",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}